//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTN {
    using System;
    using FTN;
    
    
    /// A tap changer that changes the voltage ratio impacting the voltage magnitude but not the phase angle across the transformer.
    public class RatioTapChanger : TapChanger {
        
        /// Tap step increment, in per cent of nominal voltage, per step position.
        private System.Single? cim_stepVoltageIncrement;
        
        private const bool isStepVoltageIncrementMandatory = false;
        
        private const string _stepVoltageIncrementPrefix = "cim";
        
        /// Specifies the regulation control mode (voltage or reactive) of the RatioTapChanger.
        private TransformerControlMode? cim_tculControlMode;
        
        private const bool isTculControlModeMandatory = false;
        
        private const string _tculControlModePrefix = "cim";
        
        public virtual float StepVoltageIncrement {
            get {
                return this.cim_stepVoltageIncrement.GetValueOrDefault();
            }
            set {
                this.cim_stepVoltageIncrement = value;
            }
        }
        
        public virtual bool StepVoltageIncrementHasValue {
            get {
                return this.cim_stepVoltageIncrement != null;
            }
        }
        
        public static bool IsStepVoltageIncrementMandatory {
            get {
                return isStepVoltageIncrementMandatory;
            }
        }
        
        public static string StepVoltageIncrementPrefix {
            get {
                return _stepVoltageIncrementPrefix;
            }
        }
        
        public virtual TransformerControlMode TculControlMode {
            get {
                return this.cim_tculControlMode.GetValueOrDefault();
            }
            set {
                this.cim_tculControlMode = value;
            }
        }
        
        public virtual bool TculControlModeHasValue {
            get {
                return this.cim_tculControlMode != null;
            }
        }
        
        public static bool IsTculControlModeMandatory {
            get {
                return isTculControlModeMandatory;
            }
        }
        
        public static string TculControlModePrefix {
            get {
                return _tculControlModePrefix;
            }
        }
    }
}
